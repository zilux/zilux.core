---
driver:
  name: default
  options:
    managed: false
    login_cmd_template: "podman exec -ti {instance} bash"
    ansible_connection_options:
      ansible_connection: default

dependency:
  name: galaxy
  options:
    requirements-file: requirements.yml

platforms:
  - name: harry-dev
    # image: localhost/zilux-ansible-dev:latest
    image: localhost/zilux-dev:latest
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /etc/pki/entitlement:/etc/pki/entitlement:ro
      - /usr/share/rhel/secrets:/usr/share/rhel/secrets:ro
      - /etc/yum.repos.d:/etc/yum.repos.d:ro
      - /etc/rhsm:/etc/rhsm:ro
      - /etc/ssl:/etc/ssl:ro
 
  - name: harry-accep
    image: localhost/zilux-dev:latest
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /etc/pki/entitlement:/etc/pki/entitlement:ro
      - /usr/share/rhel/secrets:/usr/share/rhel/secrets:ro
      - /etc/yum.repos.d:/etc/yum.repos.d:ro
      - /etc/rhsm:/etc/rhsm:ro
      - /etc/ssl:/etc/ssl:ro      

provisioner:
  name: ansible
  config_options:
    defaults:
      inventory: ./inventory
      stdout_callback: yaml
      roles_path: ../../roles
      deprecation_warnings: false
      remote_user: root
      local_tmp: /tmp/.ansitemp

    # playbooks:
    #  converge: ../../../../playbooks/run_report.yml
    #  create: ../../../../playbooks/test_play.yml
    # env:
    #   ANSIBLE_ROLES_PATH: "${MOLECULE_PROJECT_DIRECTORY}/roles"
    #   ANSIBLE_COLLECTIONS_PATH: "${MOLECULE_PROJECT_DIRECTORY}/../.."

scenario:
  name: default
  test_sequence:
  # - destroy
    - dependency
    - create
  # - prepare
    - converge
    - verify
  # - destroy

verifier:
  name: ansible
