---
- name: Block for creating uuid - header and list with keys of stored 'return' values
  run_once: true
  block:
    - name: Create random uuid
      ansible.builtin.set_fact:
        dest_cvs: "/home/harry/{{ 999999999999999999995 | random | to_uuid }}.csv"
        cacheable: true

    - name: Create header
      ansible.builtin.set_fact:
        header: "{{ header | default('hostname') + ',' + my_item.header }} "
      loop: "{{ run_tasks }}"
      loop_control:
        label: "{{ my_item.header }}"
        loop_var: my_item

    - name: Create list with keys where task_results are stored
      ansible.builtin.set_fact:
        ar: "{{ ar | default(['inventory_hostname'],true) + my_item.outcome_in }}"
      loop: "{{ run_tasks }}"
      loop_control:
        loop_var: my_item
        label: "{{ my_item.outcome_in }}"

- name: Show info when not mailed
  run_once: true
  delegate_to: "{{ delegate_host }}"
  when: not must_mail|bool
  block:
    - name: Create header for cvs
      ansible.builtin.debug:
        msg: "{{  header | replace(\"'\", '') }}"

    - name: Print result if not mailed
      ansible.builtin.debug:
        msg: "--> {{ hostvars[my_item] | json_query(queried) | join(',') | replace(None, '-') }} <--"
      vars:
        queried: "{{ ar | to_json }}"
      loop: "{{ ansible_play_hosts_all }}"
      loop_control:
        loop_var: my_item

- name: Create cvs and mail him
  run_once: true
  delegate_to: "{{ delegate_host }}"
  when: must_mail|bool
  block:
    - name: Create file with header
      ansible.builtin.copy:
        content: "{{ header | replace(\"'\", '') }}"
        force: true
        dest: "{{ dest_cvs }}"
        group: harry
        owner: harry
        mode: "0666"

    - name: Add lines to cvs
      ansible.builtin.lineinfile:
        dest: "{{ dest_cvs }}"
        line: "{{ hostvars[my_item] | json_query(queried) | join(',') | replace(None, '-') }}"
      vars:
        queried: "{{ ar | to_json }}"
      loop: "{{ ansible_play_hosts_all }}"
      loop_control:
        loop_var: my_item
      no_log: true

    - name: Mail to customer
      community.general.mail:
        from: Ansible
        host: mail.qrom.nl
        body: |
          {{ body_msg | default('status baseline Servers', true) }}
          ----------------------------
          Regards: Tower
        to: "{{ email_to }}"
        attach: "{{ dest_cvs }}"
        subject: "{{ mail_subject | default('baseline status', true) }}"
      register: mail_out

    - name: Show outcome of mail
      ansible.builtin.debug:
        msg: "{{ mail_out.msg }}"

    - name: Remove temp csv file
      ansible.builtin.file:
        path: "{{ dest_cvs }}"
        state: absent
